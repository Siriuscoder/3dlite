#version 330

uniform sampler2D diffuse;
uniform sampler2D glow;
uniform sampler2D normals;
uniform int glowEnabled;

uniform mat3 normalMatrix;

in vec4 vv;
in vec3 vn;
in vec2 uv;

bool vec3zero(vec3 vec)
{
    float prec = 0.000001;
    return ((1.0-step(prec, vec.x)) * (1.0-step(prec, vec.y)) * (1.0-step(prec, vec.z))) == 1.0;
}

void main()
{
    vec4 fragDiffuse = texture2D(diffuse, uv);

    if (glowEnabled > 0)
    {
        vec3 fragGlow = texture2D(glow, uv).xyz;
        if (!vec3zero(fragGlow))
        {
            fragDiffuse.xyz = fragGlow;
        }
    }


    vec4 nn = texture2D(normals, uv);

    gl_FragData[0] = vec4(vv / vv.w);
    gl_FragData[1] = vec4(normalMatrix * vec3(nn.xyz), nn.w);
    gl_FragData[2] = fragDiffuse;
}