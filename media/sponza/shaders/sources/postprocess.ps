#include "sponzamat:shaders/sources/common/version.def"

uniform sampler2D combined;
uniform sampler2D shadowmap;
uniform int FXAA;
uniform float GammaFactor;

in vec2 iuv;
in vec2 irgbNW;
in vec2 irgbNE;
in vec2 irgbSW;
in vec2 irgbSE;
in vec2 irgbM;

out vec4 fragColor;

vec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,
    vec2 v_rgbNW, vec2 v_rgbNE, 
    vec2 v_rgbSW, vec2 v_rgbSE, 
    vec2 v_rgbM);

const vec3 correction = vec3(0.95, 0.99, 1.04);

void main()
{
    //vec2 sr = textureSize(combined, 0);
    // apply FXAA
    //vec4 finalColor = FXAA > 0 ? fxaa(combined, iuv * sr.xy, sr.xy, irgbNW, irgbNE, irgbSW, irgbSE, irgbM) : texture2D(combined, iuv);

    // apply gamma correction 
    //finalColor.rgb = pow(finalColor.rgb, vec3(1/GammaFactor));
    //fragColor = vec4(finalColor.rgb * correction, 1.0);
    fragColor = vec4(texture2D(shadowmap, iuv).xxx, 1.0);
}